

$grid-columns: 12;

$grid-gaps: (

    "0": 0,
    "1": 10px,
    "2": 20px,
    "3": 30px,
    "4": 40px,
    "5": 50px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around, space-evenly;

// Base layout classes

.container{

    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
}

.row{

    display: flex;
    flex-wrap: wrap;
}


// GRid gaps

@each $key, $val in $grid-gaps {
    
    .gap-#{$key} > *{

        padding: $val;
    }

    .gap-#{$key}{

        margin-left: -$val;
        margin-right: -$val;
    }
}

// justify content classes

@each $val in $layout-values {
    
    .justify-#{$val}{

        justify-content: $val;
    }
}

// Col classes

@include xs{

    @for $i from 1 through $grid-columns {
        
        .col-#{$i}{

            width: ($i * 100%) / $grid-columns;
            flex-grow: 0;
        }
    }
}

@include sm{

    @for $i from 1 through $grid-columns {
        
        .col-sm-#{$i}{

            width: ($i * 100%) / $grid-columns;
            flex-grow: 0;
        }
    }
}

@include md{

    @for $i from 1 through $grid-columns {
        
        .col-md-#{$i}{

            width: ($i * 100%) / $grid-columns;
            flex-grow: 0;
        }
    }
}

@include lg{

    @for $i from 1 through $grid-columns {
        
        .col-lg-#{$i}{

            width: ($i * 100%) / $grid-columns;
            flex-grow: 0;
        }
    }
}

@include xl{

    @for $i from 1 through $grid-columns {
        
        .col-xl-#{$i}{

            width: ($i * 100%) / $grid-columns;
            flex-grow: 0;
        }
    }
}



